# =============================================================================
# 3.1 百度新闻数据挖掘 by 王宇韬
# =============================================================================
 
import requests
import re
 
#headers参数提供的是网站访问者的信息，headers中User-Agent表示的是用什么浏览器访问的。下面用的是谷歌浏览器
headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36'}
 
url = 'https://www.baidu.com/s?tn=news&rtt=1&bsst=1&cl=2&wd=阿里巴巴'  # 把链接中rtt参数换成4即是按时间排序，默认为1按焦点排序，3.4.1小节也有讲到
res = requests.get(url, headers=headers).text  # 加上headers用来告诉网站这是通过一个浏览器进行的访问
# print(res)
 
p_info = '<p class="c-author">(.*?)</p>'
#存储findall函数查找到的内容的列表
info = re.findall(p_info, res, re.S)
#用正则表达式提取标题
p_href = '<h3 class="c-title">.*?<a href="(.*?)"'
href = re.findall(p_href, res, re.S)
 
p_title = '<h3 class="c-title">.*?>(.*?)</a>'
title = re.findall(p_title, res, re.S)
# print(info)  # 常通过打印列表及列表长度，先看看获取的内容是否正确
# print(len(info))
# print(href)
# print(len(href))
# print(title)
# print(len(title))
 
source = []  # 先创建两个空列表来储存等会分割后的来源和日期
date = []
for i in range(len(info)):
    #用strip把不需要的空格和换行符去掉
    title[i] = title[i].strip()
    #用sub（）处理<em></em>。<.*?>表示任何形式为<xxx>的内容。
    title[i] = re.sub('<.*?>', '', title[i])
    info[i] = re.sub('<.*?>', '', info[i])
    source.append(info[i].split('&nbsp;&nbsp;')[0])
    date.append(info[i].split('&nbsp;&nbsp;')[1])
    source[i] = source[i].strip()
    date[i] = date[i].strip()
 
    print(str(i + 1) + '.' + title[i] + '(' + date[i] + '-' + source[i] + ')')
    print(href[i])
 

